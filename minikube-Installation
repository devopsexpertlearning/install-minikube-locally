Step 1**********************************************************Docker Installation***************************************************************

sudo yum update -y && sudo amazon-linux-extras install docker -y && sudo systemctl start docker && sudo systemctl enable docker

sudo usermod -aG docker $USER && newgrp docker #"sudo docker " Add to the group so you can run Docker commands without using "ec2-user"

Step 2******************************************************************Install Conntrack**********************************************************

sudo yum install conntrack -y


*****************************************************************How to Install kubectl on Linux**************************************************

minikube kubectl -- get po -A

curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl

chmod +x ./kubectl

sudo mv ./kubectl /usr/bin/kubectl

*************************************************************Minkube Installation**************************************************************

wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

sudo chmod +x minikube-linux-amd64

sudo mv minikube-linux-amd64 /usr/bin/minikube

minikube version

***************************************************************Start your cluster**********************************************************


minikube start

kubectl get po -A                     #it to access your shiny new cluster:



**************************************If Install  in Ubuntu theb Install cri-dockerd ****************************************************

# Run these commands as root
###Install GO###
wget https://storage.googleapis.com/golang/getgo/installer_linux
chmod +x ./installer_linux
./installer_linux
source ~/.bash_profile

cd cri-dockerd
mkdir bin
go build -o bin/cri-dockerd
install -o root -g root -m 0755 bin/cri-dockerd /usr/bin/cri-dockerd
cp -a packaging/systemd/* /etc/systemd/system
sed -i -e 's,/usr/bin/cri-dockerd,/usr/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
systemctl daemon-reload
systemctl enable cri-docker.service
systemctl enable --now cri-docker.socket

VERSION=$((git describe --abbrev=0 --tags | sed -e 's/v//') || echo $(cat VERSION)-$(git log -1 --pretty='%h')) PRERELEASE=$(grep -q dev <<< "${VERSION}" && echo "pre" || echo "") REVISION=$(git log -1 --pretty='%h')
go build -ldflags="-X github.com/Mirantis/cri-dockerd/version.Version='$VERSION}' -X github.com/Mirantis/cri-dockerd/version.PreRelease='$PRERELEASE' -X github.com/Mirantis/cri-dockerd/version.BuildTime='$BUILD_DATE' -X github.com/Mirantis/cri-dockerd/version.GitCommit='$REVISION'" -o cri-dockerd


********************************************Install Crictl************************************************************************

VERSION="v1.24.1"
wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/bin
rm -f crictl-$VERSION-linux-amd64.tar.gz


=================================Deploy applications=============================================

kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4
kubectl expose deployment hello-minikube --type=NodePort --port=8080

kubectl get services <podname>

minikube service <hello-minikube>

**********************************************************Use kubectl to forward the port*****************************************

kubectl port-forward service/hello-minikube [ForwardPort]:[TargetPort]

kubectl port-forward service/ubuntu-1 7081:8080

********************************************************create local ssh tunnel*****************************************************

ssh -i /c/Users/jaibhole/Desktop/aws-key -L 8081:localhost:7080 ec2-user@52.66.221.70

URL - http://127.0.0.1:8081

